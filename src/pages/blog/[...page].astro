---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogLayout from "../../layouts/BlogLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import type { GetStaticPathsOptions, Page } from "astro";
import Pagination from "../../components/Pagination.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    // v1: return paginate(await Astro.glob("../pages/blog/*.mdx"), { pageSize: 20 });
    return paginate(await getCollection("posts"), { pageSize: 5 });
}

export const prerender = true;

const { page } = Astro.props as {
    page: Page<CollectionEntry<"posts">>;
};
page.data.sort((a, b) =>
    new Date(a.data.date) > new Date(b.data.date) ? -1 : 1,
);
const currentPageNumber = parseInt(page.url.current.match(/\d+/)?.[0] ?? "1");
---

<BlogLayout
    title={"記事一覧 - " + { currentPageNumber } + "ページ目"}
    description="このページは、記事一覧ページです。"
>
    <h1 class="text-2xl font-bold mb-4">
        記事一覧 - {currentPageNumber}ページ目
    </h1>
    {
        page.data.map((post, index) => (
            <>
                <BlogPost
                    slug={post.slug}
                    title={post.data.title}
                    date={post.data.date}
                    description={post.data.description}
                    tags={post.data.tags}
                />
            </>
        ))
    }
    <Pagination
        prev={page.url.prev}
        current={currentPageNumber}
        next={page.url.next}
    />
    <script is:inline>
        googletag.display("div-gpt-ad-1718167284794-0");
    </script>
</BlogLayout>
