---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogLayout from "../../layouts/BlogLayout.astro";
import BlogMeta from "../../components/BlogMeta.astro";

export async function getStaticPaths({}) {
    const posts = await getCollection("posts");
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: { post },
    }));
}

export const prerender = true;

interface Props {
    post: CollectionEntry<"posts">;
}
const { post } = Astro.props;
const { Content } = await post.render();
---

<BlogLayout title={post.data.title} description={post.data.description}>
    <div class="overlay" id="overlay"></div>
    <div class="markdown">
        <BlogMeta
            title={post.data.title}
            date={post.data.date}
            tags={post.data.tags}
        />
        <Content />
    </div>
    <script is:inline>
        document.addEventListener("DOMContentLoaded", function () {
            const images = document.querySelectorAll(".markdown img");
            const overlay = document.getElementById("overlay");

            if (overlay) {
                images.forEach((image) => {
                    image.addEventListener("click", () => {
                        if (image.classList.contains("zoomed")) {
                            image.classList.remove("zoomed");
                            overlay.classList.remove("active");
                        } else {
                            image.classList.add("zoomed");
                            overlay.classList.add("active");
                        }
                    });
                });

                overlay.addEventListener("click", () => {
                    const zoomedImage = document.querySelector(".zoomed");
                    if (zoomedImage) {
                        zoomedImage.classList.remove("zoomed");
                        overlay.classList.remove("active");
                    }
                });
            }
        });
    </script>
</BlogLayout>
