---
import type { CollectionEntry } from "astro:content";
import BlogLayout from "../../../layouts/BlogLayout.astro";
import BlogPost from "../../../components/BlogPost.astro";
import type { GetStaticPathsOptions, Page } from "astro";
import { getAllTags, parseTags, getBlogs } from "../../../utils/blog";
import Pagination from "../../../components/Pagination.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = await getBlogs();
    const tags = getAllTags(posts);

    return tags
        .map((tag) =>
            paginate(
                posts.filter((post) =>
                    parseTags(post.data.tags).some(
                        (current) => current === tag,
                    ),
                ),
                {
                    params: { tag },
                    pageSize: 5,
                },
            ),
        )
        .flat();
}

const { tag } = Astro.params;

export const prerender = true;

const { page } = Astro.props as {
    page: Page<CollectionEntry<"posts">>;
};
page.data.sort((a, b) =>
    new Date(a.data.date) > new Date(b.data.date) ? -1 : 1,
);
let currentPageNumber;
if (page.url.current === "/tags/" + tag) {
    currentPageNumber = 1;
} else {
    currentPageNumber = parseInt(
        page.url.current.match(/(\d+)(?!.*\d)/)?.[0] ?? "1",
    );
}
---

<BlogLayout
    pageType="list"
    title={tag}
    description={`#${tag}に関する記事の一覧です。`}
>
    <h1 class="text-2xl font-bold mb-4">
        #{tag}　に関する記事 - {currentPageNumber}ページ目
    </h1>
    {
        page.data.map((post, index) => (
            <>
                <BlogPost
                    slug={post.slug}
                    title={post.data.title}
                    date={post.data.date}
                    description={post.data.description}
                    tags={post.data.tags}
                />
                {index === 2 && <div id="div-gpt-ad-1718168938559-0" />}
            </>
        ))
    }
    <Pagination
        prev={page.url.prev}
        current={currentPageNumber}
        next={page.url.next}
    />
</BlogLayout>
